#!/bin/zsh

generate_gitignore_global() {
	local GITIGNORE_CLONE_DIR="${HOME}/.gitignore"
	local GITIGNORE_GLOBAL="${HOME}/.gitignore_global"

	local require_update=0

	for arg in "$@"; do
		if [[ "${arg}" == "-f" ]]; then
			require_update=1
		fi
	done

	if [[ ! -d "${GITIGNORE_CLONE_DIR}" ]]; then
		git clone --depth 1 https://github.com/github/gitignore.git "${GITIGNORE_CLONE_DIR}"
		require_update=1
	else
		(
			cd "${GITIGNORE_CLONE_DIR}" || exit
			git checkout --quiet main
			git pull origin main 2>/dev/null | grep --quiet 'Already up to date.' &>/dev/null
		)
		require_update=$?
	fi

	if [[ -f "${GITIGNORE_GLOBAL}" ]] && [[ "$require_update" -eq 0 ]]; then
		echo "Skipped update ${GITIGNORE_GLOBAL}"
		return
	fi

	local ignores=(
		Eclipse
		JetBrains
		MonoDevelop
		MicrosoftOffice
		VisualStudioCode

		macOS
		Linux
		Windows
	)

	echo -e '## Code generated by my dotfiles.; DO NOT EDIT.\n' > "${GITIGNORE_GLOBAL}"
	for ignore in ${ignores[@]}; do
		local IGNORE_PART=$(command cat <<- EOS
			########## start ${ignore} ##########
			$(command cat "${GITIGNORE_CLONE_DIR}/Global/${ignore}.gitignore")
			########## end ${ignore} ##########
			EOS
		)
		echo -e "${IGNORE_PART}\n" >> "${GITIGNORE_GLOBAL}"
	done

	echo "Updated ${GITIGNORE_GLOBAL}"
}

wttr() {
	local location="${1// /+}"
	shift 2>/dev/null
	local args=""
	for p in "$@"; do
		args+=" --data-urlencode $p "
	done
	curl -fsSL -H "Accept-Language: ${LANG%_*}" $args --compressed "wttr.in/${location}"
}

autoload -Uz generate_gitignore_global
autoload -Uz wttr
